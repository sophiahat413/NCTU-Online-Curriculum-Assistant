{
  "_from": "detect-character-encoding",
  "_id": "detect-character-encoding@0.5.1",
  "_inBundle": false,
  "_integrity": "sha512-Dc2MB8TZ1iB1ZyXUVOqhiG+rR/YQZo7KlyfO2jioiA5s7Fo339FRvQXLRn7p/heQHxvV8XZe3wfBKkTIuv+PlA==",
  "_location": "/detect-character-encoding",
  "_phantomChildren": {},
  "_requested": {
    "type": "tag",
    "registry": true,
    "raw": "detect-character-encoding",
    "name": "detect-character-encoding",
    "escapedName": "detect-character-encoding",
    "rawSpec": "",
    "saveSpec": null,
    "fetchSpec": "latest"
  },
  "_requiredBy": [
    "#DEV:/",
    "#USER"
  ],
  "_resolved": "https://registry.npmjs.org/detect-character-encoding/-/detect-character-encoding-0.5.1.tgz",
  "_shasum": "5273dbd470e9c7fc190cafa3e2430e50defb46fa",
  "_spec": "detect-character-encoding",
  "_where": "/home/nctuca/nctu-cs-ca/routes/user/students",
  "author": {
    "name": "Jakob Krigovsky",
    "email": "jakob@krigovsky.com"
  },
  "bugs": {
    "url": "https://github.com/sonicdoe/detect-character-encoding/issues"
  },
  "bundleDependencies": false,
  "dependencies": {
    "bindings": "^1.2.1",
    "nan": "^2.0.9"
  },
  "deprecated": false,
  "description": "Detect character encoding using ICU.",
  "devDependencies": {
    "mocha": "^3.2.0",
    "xo": "^0.18.2"
  },
  "engines": {
    "node": ">=4"
  },
  "files": [
    "vendor/icu",
    "binding.gyp",
    "config.gypi",
    "icuWrapper.cpp",
    "index.js",
    "LICENSE"
  ],
  "gypfile": true,
  "homepage": "https://github.com/sonicdoe/detect-character-encoding#readme",
  "keywords": [
    "detect",
    "character",
    "encoding",
    "charset",
    "icu"
  ],
  "license": "BSD-2-Clause",
  "name": "detect-character-encoding",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/sonicdoe/detect-character-encoding.git"
  },
  "scripts": {
    "install": "node-gyp rebuild",
    "test": "xo && mocha"
  },
  "version": "0.5.1",
  "xo": {
    "globals": [
      "describe",
      "context",
      "it",
      "specify",
      "before",
      "after",
      "beforeEach",
      "afterEach"
    ],
    "rules": {
      "keyword-spacing": [
        "error",
        {
          "after": false
        }
      ],
      "space-before-function-paren": [
        "error",
        "never"
      ]
    }
  }
}
